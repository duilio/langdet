#!/usr/bin/env python
import argparse
from collections import OrderedDict

from langdet import \
    RandomLanguageDetector, \
    CosineLanguageDetector, \
    BigramCosineLanguageDetector, \
    TrigramCosineLanguageDetector, \
    MultiCosineLanguageDetector, \
    stream_sample

algos = OrderedDict([
    ('random', RandomLanguageDetector),
    ('cosine1', CosineLanguageDetector),
    ('cosine2', BigramCosineLanguageDetector),
    ('cosine3', TrigramCosineLanguageDetector),
    ('multi', MultiCosineLanguageDetector),
    ])

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('train', help='Training set')
    parser.add_argument('test', help='Testing set')
    args = parser.parse_args()

    train = list(stream_sample(args.train))
    test = list(stream_sample(args.test))
    
    for algo_name, algo_class in algos.iteritems():
        det = algo_class()
        det.train(train)
        precision, recall, mistakes = det.eval(test)

        print algo_name
        print '%s\t%s\t%s' % ('Lang', 'Prec', 'Rec')
        for lang in sorted(precision):
            print '%s\t%.2f\t%.2f' % (lang, precision[lang], recall[lang])
        print
